#!/usr/bin/python
# :set ft=python
#===============================================================================
#
#          FILE:  pymail
# 
#         USAGE:  ./pymail [-h] [-r FROM_ADDR] [-s SUBJECT] [-a ATTACHMENT] to
# 
#   DESCRIPTION:  similar to `mail`, but using python and an SMTP server 
#                 instead of the local MTA
# 
#       OPTIONS:  see ./pymail -h
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:   (), 
#       COMPANY:  
#       VERSION:  1.0
#       CREATED:  10.12.2013 09:24:13 CET
#      REVISION:  ---
#===============================================================================

import smtplib, getpass, socket, fileinput, argparse, sys

# default settings and arguments
sender = getpass.getuser() + "@" + socket.gethostname()
receiver = ''
smtp = 'galaxy'       # this is our company SMTP, it is only available locally
subject = '<empty>'
body = ''

# use argparse (see `./pymail -h`)
parser = argparse.ArgumentParser(description="""Simple Python SMTP mailer.  
    This program is quite similar to mail but does not require a local MTA (sendmail etc.).
    Instead, it relies on a SMTP server on the local network (which must be open, i.e. not ask for a password). """)
parser.add_argument("to", help="specify the recipient")
parser.add_argument("-r", "--from-addr", help="specify the sender")
parser.add_argument("-s", "--subject", help="specify the sender")
parser.add_argument("-a", "--attachment", action='append', help="append file(s) (only text files)")

args = parser.parse_args()

if args.from_addr:
    sender = args.from_addr

if args.subject:
    subject = args.subject

receiver = args.to

# create the mail header lines
body = body + "From:    " + sender + "\n"
body = body + "To:      " + receiver + "\n" 
body = body + "Subject: " + subject + "\n" 
body = body + "\n"

# append the mail body
while True:
    try:
        line  = raw_input()
    except EOFError:
        break
    if line == ".": break
    body = body + line + "\n"

# append text files
if args.attachment:
    for line in fileinput.input(args.attachment):
        body = body + line


#print body
# and send.
smtplib.SMTP(smtp).sendmail(sender, receiver, body)

