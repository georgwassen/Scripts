#!/bin/bash
#===============================================================
#
#          FILE:  test.sh
# 
#         USAGE:  ./test.sh 
# 
#   DESCRIPTION: open is a command existing on MacOS to open arbitrary files.
#                This command is used in quite some Makefiles by our Mac users.
#                To avoid errors, this script tries to mimic its behavior on Linux.
#
#                For convenience, if the given parameter does not exist,
#                this script automatically extends the given parameter with '.pdf'. 
#                In LaTeX projects, this allows to enter: "open docu<TAB><ENTER>"
#                although <TAB> completes only up to "open document.",
#                but `open` chooses to open the file document.pdf
# 
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Georg Wassen (georg.wassen@googlemail.com), 
#       COMPANY:  
#       VERSION:  1.0
#       CREATED:  11.06.2013 07:49:18 CET
#      REVISION:  ---
#
#===============================================================

if [[ $# -eq 1 ]]; then
    # exactly one parameter: must be the file name
    FILE=$1
    if [[ $FILE =~ ^http ]]; then
        # TODO : open URL
        echo URL
    elif [[ $FILE =~ \.md$ ]]; then
        # Markdown: convert to html and open in browser
        MD=$(which markdown_py)
        if [[ ! -x $MD ]]; then
            echo "sorry, no Markdown converter to pre-process $FILE"
            echo "install markdown_py"
            cnf markdown_py
            exit
        fi
        TMPFILE=$(mktemp /tmp/XXXXXXXX.html)
        $MD $FILE > $TMPFILE
        FILE=$TMPFILE
    elif [[ ! -r $FILE ]]; then
        # file does not exist

        # find matching files, grep only .PDF
        LIST=$(ls $FILE* | egrep '\.pdf$')

        # test, if only a single file matched:
        CNT=$(echo $LIST | wc -w)
        if [[ $CNT -eq 0 ]]; then
            echo "found no matches."
            FILE=''
        elif [[ $CNT -eq 1 ]]; then
            # exactly one match: open this file
            FILE=$LIST
        else
            echo "found multiple matches:"
            echo "$LIST"
            echo "please specify more precisely."
            FILE=''
        fi
    fi
else
    echo "Use: $0 <filename to open>"
fi

# use xdg-open to find a matching application for the file type
if [[ $FILE ]]; then
    nohup xdg-open $FILE &> /dev/null &
fi

